{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Card/Card.jsx","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","components/Cards/Cards.module.css","App.module.css","components/Cards/Card/Card.module.css"],"names":["module","exports","CardComponent","className","cardTitle","value","lastUpdate","cardSubtitle","Grid","item","xs","md","component","Card","cx","styles","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toDateString","Info","data","confirmed","recovered","deaths","console","log","container","spacing","justify","infected","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","positive","death","date","dateChecked","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","toLocaleDateString","borderColor","fill","Countries","handleCountryChange","setCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","setState","this","image","src","alt","Cards","CountryPicker","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4f55309b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__R3IJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__UzHsI\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Card.module.css';\r\n\r\nconst CardComponent = ({ className, cardTitle, value, lastUpdate, cardSubtitle }) => (\r\n  <Grid item xs={12} md={3} component={Card} className={cx(styles.card, className)}>\r\n    <CardContent>\r\n      <Typography color=\"textSecondary\" gutterBottom>\r\n        {cardTitle}\r\n      </Typography>\r\n      <Typography variant=\"h5\" component=\"h2\">\r\n        <CountUp start={0} end={value} duration={2.75} separator=\",\" />\r\n      </Typography>\r\n      <Typography color=\"textSecondary\">\r\n        {new Date(lastUpdate).toDateString()}\r\n      </Typography>\r\n      <Typography variant=\"body2\" component=\"p\">\r\n        {cardSubtitle}\r\n      </Typography>\r\n    </CardContent>\r\n  </Grid>\r\n);\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport { Typography, Grid } from '@material-ui/core';\r\nimport CardComponent from './Card/Card';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Info = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  console.log(recovered)\r\n  if (!confirmed) {\r\n    return 'Loading...';\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n       <Typography gutterBottom variant=\"h4\" component=\"h2\">Global</Typography>\r\n        <Grid container spacing={3} justify=\"center\">\r\n          <CardComponent\r\n            className={styles.infected}\r\n            cardTitle=\"Infected\"\r\n            value={confirmed.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of active cases from COVID-19.\"\r\n          />\r\n          <CardComponent\r\n            className={styles.recovered}\r\n            cardTitle=\"Recovered\"\r\n            value={recovered.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of recoveries from COVID-19.\"\r\n          />\r\n          <CardComponent\r\n            className={styles.deaths}\r\n            cardTitle=\"Deaths\"\r\n            value={deaths.value}\r\n            lastUpdate={lastUpdate}\r\n            cardSubtitle=\"Number of deaths caused by COVID-19.\"\r\n          />\r\n        </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if (country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  try {\r\n    const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n    return { confirmed, recovered, deaths, lastUpdate };\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\n// export const fetchDailyData = async () => {\r\n//   try {\r\n//     const { data } = await axios.get(`${url}/daily`);\r\n\r\n//     return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\r\n//   } catch (error) {\r\n//     return error;\r\n//   }\r\n// };\r\n\r\n// Instead of Global, it fetches the daily data \r\nexport const fetchDailyData = async () => {\r\n    try {\r\n      const { data } = await axios.get('https://api.covidtracking.com/v1/us/daily.json');\r\n  \r\n      return data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, date }));\r\n    } catch (error) {\r\n      return error;\r\n    }\r\n  };\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const { data: { countries } } = await axios.get(`${url}/countries`);\r\n\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n  const [dailyData, setDailyData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchMyAPI = async () => {\r\n      const initialDailyData = await fetchDailyData();\r\n\r\n      setDailyData(initialDailyData);\r\n    };\r\n\r\n    fetchMyAPI();\r\n  }, []);\r\n\r\n  const barChart = (\r\n    confirmed ? (\r\n      <Bar\r\n        data={{\r\n          labels: ['Infected', 'Recovered', 'Deaths'],\r\n          datasets: [\r\n            {\r\n              label: 'People',\r\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n              data: [confirmed.value, recovered.value, deaths.value],\r\n            },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current state in ${country}` },\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  const lineChart = (\r\n    dailyData[0] ? (\r\n      <Line\r\n        data={{\r\n          labels: dailyData.map(({ date }) => new Date(date).toLocaleDateString()),\r\n          datasets: [{\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: 'Infected',\r\n            borderColor: '#3333ff',\r\n            fill: true,\r\n          }, {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: 'Deaths',\r\n            borderColor: 'red',\r\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n            fill: true,\r\n          },  {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n      />\r\n    ) : null\r\n  );\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {country ? barChart : lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nconst Countries = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchAPI = async () => {\r\n      setCountries(await fetchCountries());\r\n    };\r\n\r\n    fetchAPI();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Argentina</option>\r\n        {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\nimport { Cards, CountryPicker, Chart } from './components';\r\nimport { fetchData } from './api/';\r\nimport styles from './App.module.css';\r\n\r\nimport image from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    data: {},\r\n    country: '',\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const data = await fetchData();\r\n\r\n    this.setState({ data });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const data = await fetchData(country);\r\n\r\n    this.setState({ data, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n\r\n    return (\r\n      <div className={styles.container}>\r\n        <img className={styles.image} src={image} alt=\"COVID-19\" />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} /> \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__mF2bm\",\"infected\":\"Cards_infected__6nyen\",\"recovered\":\"Cards_recovered__3yKxv\",\"deaths\":\"Cards_deaths__1rYnp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__t0aaN\",\"image\":\"App_image__2KCk2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3b0Jq\"};"],"sourceRoot":""}